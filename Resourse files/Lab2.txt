use Lab1;
SET GLOBAL log_bin_trust_function_creators = 1;
#1: ADD_STUDENT procedure
delimiter !
create procedure ADD_STUDENT  (
	IN ID char(8),
    IN name varchar(45),
    IN sex char(1),
    IN DOB date,
    IN POB varchar(40),
    IN Address varchar(100),
    IN deptID char(8)
    )
begin
	insert into sinhVien (mssv, hoten, gioitinh, ngaysinh, noisinh, diachi, makhoa)
    values (ID, name, sex, DOB, POB, Address, deptID);
end!

call Add_student ('B1111111','a', 'M', '2003-10-10', 'CT', 'abcdef', 'sp');
drop procedure add_student;
select * from sinhVien;

#2: DEL_STUDENT procedure
delimiter !
create procedure DEL_STUDENT (IN ID char(8))
begin
	delete from ketQua where ketQua.mssv = ID;
	delete from sinhVien where sinhVien.mssv = ID;
end!

call del_student('B1111111');
drop procedure del_student;
select * from sinhVien;

#3: AVG_GRADE procedure
delimiter !
create procedure AVG_GRADE (IN ID char(8), OUT diemTB double)
begin
	if exists (select * from sinhVien where mssv = ID) then
		select sum(diem*sotinchi)/sum(sotinchi) into diemTB from ketQua
        join hocphan on ketQua.mahp = hocphan.mahp
        where mssv = ID;
    else
		set diemTB = -1;
    end if;
end!

drop procedure avg_grade;
set @diemTB = 0;
call avg_grade('B1234567', @diemTB);
select @diemTB;

#4: AVG_GRADE function
delimiter !
create function AGF (ID char(8))
returns double
deterministic
begin 
	declare a double default 0;
	if exists (select * from sinhVien where mssv = ID) then
		select sum(diem*sotinchi)/sum(sotinchi) into a from ketQua
        join hocphan on ketQua.mahp = hocphan.mahp
        where mssv = ID;
        return a;
    else
		set a = -1;
		return a;
    end if;
end!

drop function agf;
select *, agf(mssv) as diemTB from sinhVien;
select agf('B1234567');

#5: AVG_GRADE_DEPT procedure
delimiter !
create procedure AVG_GRADE_DEPT (IN dID char(8))
begin
	select mssv, hoten ,avg_grade(mssv) as diemTB from khoa
	join sinhVien on sinhVien.makhoa = khoa.makhoa
	where khoa.makhoa = dID;
end!

call avg_grade_dept ('cntt&tt');
drop procedure avg_grade_dept;

#6: Graduate function
delimiter !
create function Graduate (ID char(8))
returns int
deterministic
begin 
	declare avg_g float default 0;
    declare total_credit int default 0;
    
    set avg_g = (select distinct avg_grade(mssv) from ketQua where mssv = ID);
                
	set total_credit = (select sum(sotinchi) from hocphan
						where mahp in (select mahp from ketQua where mssv = ID));
    
    if avg_g >= 3 and total_credit >= 7 then
		return 1;
	else 
		return 0;
	end if;
end!

select graduate('B1234567');
drop function graduate;

#7: function GRADUATE_CLASSIFY
delimiter !
create function GRADUATE_CLASSIFY (ID char(8))
returns varchar(20)
deterministic
begin
	declare a double default 0;
	set a = (select distinct agf(mssv) from ketQua where mssv = ID);
	if graduate(ID) = 1 then
		case 
			when a < 5 then return 'Ngu';
            when a > 5 then return 'Not Ngu';
            else return 'WTF';
		end case;
	else 
		return 'Sieu Ngu';
	end if;    
end!

drop function graduate_classify;
select graduate_classify('B1456789');






























